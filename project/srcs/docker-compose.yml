version: "3"

services:
  ## Create service For Nginix
  nginx:
    image: nginx
    container_name: nginx
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
    depends_on:
      - wordpress
    ports:
      - "443:443"
    volumes:
      - ./requirements/nginx/conf/:/etc/nginx/http.d/
      - ./requirements/nginx/tools:/etc/nginx/ssl/
      - wp_data:/var/www
    networks:
      - web
    restart: always
  ## Create a service for Mariadb
  mariadb:
    image: mariadb
    container_name: mariadb
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
    expose:
      - "3306"
    env_file:
      - .env
    networks:
      - web
    volumes:
      - db_data:/var/lib/mysql
    restart: always
  ## Create a service for wordpress
  wordpress:
    image: wordpress
    container_name: wordpress
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
    depends_on:
      - mariadb
    expose:
      - "9000"
    env_file:
      - .env
    networks:
      - web
    volumes:
      - wp_data:/var/www
  ## Create a service for redis
  redis:
    image: redis
    container_name: redis
    build:
      context: .
      dockerfile: requirements/redis/Dockerfile
    depends_on:
      - wordpress
    ports:
      - "6379:6379"
    networks:
      - web
    env_file:
      - .env
    restart: always
  ## Create a service for vsftpd
  ftp:
    image: ftp
    container_name: ftp
    build:
      context: .
      dockerfile: requirements/ftp/Dockerfile
    depends_on:
      - wordpress
    env_file:
      - .env
    networks:
      - web
    ports:
      - "21:21"
    volumes:
      - wp_data:/var/www
    restart: always
  ## Create service for Static web site
  simple-site:
    image: simple-site
    container_name: simple-site
    build:
      context: .
      dockerfile: requirements/site-statique/Dockerfile
    ports:
      - "444:444"
    volumes:
      - ./requirements/site-statique/conf/:/etc/nginx/http.d/
      - /home/${USER}/project/srcs/requirements/site-statique/tools/srcs:/var/www
    restart: always
  ## Create service for Adminer
  adminer:
    image: adminer
    container_name: adminer
    build:
      context: .
      dockerfile: requirements/adminer/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mariadb
    networks:
      - web
    restart: always
  ## Create service for cAdvisor
  cadvisor:
    image: cadvisor
    container_name: cadvisor
    build:
      context: .
      dockerfile: ./requirements/cadvisor/Dockerfile
    ports:
      - "5000:5000"
    networks:
      - web
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: always

## Volumes to use inside containers 
volumes:
  db_data:
    driver_opts:
      type: "none"
      o: "bind"
      device: "~/data/db_data"
  wp_data:
    driver_opts:
      type: "none"
      o: "bind"
      device: "~/data/wp_data"
## Networks to communicate with containers
networks:
  web:
    driver: bridge

